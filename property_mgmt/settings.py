"""
Django settings for property_mgmt project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from decouple import config

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tj6t^#(83bs9=k$2on9_jvr0!u0z4*rm4ku(oit+-skg2r9l2@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

DJANGO_SETTINGS_MODULE = "property_mgmt.settings"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.facebook',
    'django_extensions',
    
    
    # Custom apps
     
    'frontend',  # Frontend App for the Property Management System
    'properties',  # Property Management App
    'transactions', # Transaction Management App
    'reports',  # Reporting App
    
    # Third-party apps
    'rest_framework',  # Django REST Framework
    'rest_framework_simplejwt', # JWT Authentication
    
   
    
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'


# Optional: collect all static files into one folder (e.g. for deployment)
STATICFILES_DIRS = [
    BASE_DIR / 'property_mgmt_backend' / 'static',
    BASE_DIR / 'frontend',  # Additional static files directory
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Authentication settings for DRF
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# Middleware configuration

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'property_mgmt.urls'

import os
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR/'frontend'/'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'property_mgmt.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'property_management_system',
        'USER': 'gwiternz',
        'PASSWORD': '@#93Gwiternz29#@',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Mpesa Daraja API Settings
MPESA_CONSUMER_KEY = 'jG8krQFuzcdYn9EFwwlvMdyC9nLxufKTzJOnHAUYKrFoPUer'
MPESA_CONSUMER_SECRET = 'sNIS1DYt5jl1P1tdsD3oY1kle10nsgGCROyG5aFy8GNIkU28elfZgmqCXX2iMeoP'
MPESA_SHORTCODE = '174379'
MPESA_PASSKEY = 'your_passkey'
MPESA_BASE_URL = 'https://sandbox.safaricom.co.ke'

# My Ngrok/Public callback base
MPESA_CALLBACK_URL = 'https://baec-129-222-187-16.ngrok-free.app'


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'gwiternz@gmail.com'
EMAIL_HOST_PASSWORD = '@#93Gwiternz29#@'  # use an app password if using Gmail

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


CSRF_TRUSTED_ORIGINS = [
    "https://*.ngrok-free.app"
]

SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ALLOWED_HOSTS = ['*']

import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
  
LOGIN_REDIRECT_URL = '/home/'
LOGOUT_REDIRECT_URL = 'login'


# Removed invalid pytest configuration from settings.py.
