# Generated by Django 5.1.6 on 2025-04-08 11:11

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('properties', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='property',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='lease',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 4, 8, 11, 5, 59, 13185, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lease',
            name='is_renewed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='is_rent_paid',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='is_signed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='is_terminated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='is_terminated_by_landlord',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='is_terminated_by_tenant',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='lease_document',
            field=models.FileField(blank=True, null=True, upload_to='lease_documents/'),
        ),
        migrations.AddField(
            model_name='lease',
            name='lease_terms',
            field=models.TextField(default='Standard 12-month lease'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lease',
            name='payment_frequency',
            field=models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], default='monthly', max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lease',
            name='payment_method',
            field=models.CharField(choices=[('cash', 'Cash'), ('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer')], default='cash', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lease',
            name='renewal_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='renewal_fee',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='renewal_fee_paid',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='renewal_fee_paid_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='renewal_terms',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='rent_payment_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='rent_payment_method',
            field=models.CharField(choices=[('cash', 'Cash'), ('mpesa', 'M-Pesa'), ('bank_transfer', 'Bank Transfer')], default='cash', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lease',
            name='rent_payment_receipt',
            field=models.FileField(blank=True, null=True, upload_to='rent_payment_receipts/'),
        ),
        migrations.AddField(
            model_name='lease',
            name='rent_payment_reference_number',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='rent_payment_status',
            field=models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='lease',
            name='security_deposit',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='lease',
            name='signed_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='termination_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='termination_fee',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='termination_fee_paid',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='lease',
            name='termination_fee_paid_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='termination_notice_period',
            field=models.IntegerField(default=30, help_text='Notice period in days'),
        ),
        migrations.AddField(
            model_name='lease',
            name='termination_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='lease',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='tenant',
            name='profile_picture',
            field=models.ImageField(blank=True, null=True, upload_to='profile_pictures/'),
        ),
        migrations.AddField(
            model_name='tenant',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='verification_code',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='tenant',
            name='verification_code_expiry',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='property',
            name='property_type',
            field=models.CharField(choices=[('house', 'House'), ('apartment', 'Apartment'), ('hotel', 'Hotel'), ('restaurant', 'Restaurant'), ('beach_land', 'Beach Land')], max_length=20),
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_level', models.IntegerField()),
                ('num_bedrooms', models.IntegerField()),
                ('building_amenities', models.TextField()),
                ('has_balcony', models.BooleanField(default=False)),
                ('has_parking_space', models.BooleanField(default=False)),
                ('has_swimming_pool', models.BooleanField(default=False)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='apartment', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='BeachLand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_area', models.FloatField()),
                ('beachfront_length', models.FloatField()),
                ('zoning_type', models.CharField(max_length=100)),
                ('has_access_road', models.BooleanField(default=False)),
                ('has_electricity', models.BooleanField(default=False)),
                ('has_water_supply', models.BooleanField(default=False)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='beach_land', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_rooms', models.IntegerField()),
                ('star_rating', models.FloatField()),
                ('has_conference_facility', models.BooleanField(default=False)),
                ('has_swimming_pool', models.BooleanField(default=False)),
                ('has_restaurant', models.BooleanField(default=False)),
                ('has_gym', models.BooleanField(default=False)),
                ('has_spa', models.BooleanField(default=False)),
                ('has_parking_space', models.BooleanField(default=False)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_air_conditioning', models.BooleanField(default=False)),
                ('has_heating', models.BooleanField(default=False)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hotel', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_bedrooms', models.IntegerField()),
                ('num_bathrooms', models.IntegerField()),
                ('has_garage', models.BooleanField(default=False)),
                ('lot_size', models.FloatField(help_text='Size in square meters')),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='house', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_offices', models.IntegerField()),
                ('has_meeting_room', models.BooleanField(default=False)),
                ('has_reception_area', models.BooleanField(default=False)),
                ('has_parking_space', models.BooleanField(default=False)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_air_conditioning', models.BooleanField(default=False)),
                ('has_heating', models.BooleanField(default=False)),
                ('has_security', models.BooleanField(default=False)),
                ('has_elevator', models.BooleanField(default=False)),
                ('has_fire_safety', models.BooleanField(default=False)),
                ('has_accessibility_features', models.BooleanField(default=False)),
                ('has_kitchenette', models.BooleanField(default=False)),
                ('has_bathrooms', models.BooleanField(default=False)),
                ('has_storage_space', models.BooleanField(default=False)),
                ('has_conference_facility', models.BooleanField(default=False)),
                ('has_break_room', models.BooleanField(default=False)),
                ('has_telecommunication_infrastructure', models.BooleanField(default=False)),
                ('has_parking_lot', models.BooleanField(default=False)),
                ('has_green_certification', models.BooleanField(default=False)),
                ('has_smart_building_technology', models.BooleanField(default=False)),
                ('has_sustainability_features', models.BooleanField(default=False)),
                ('has_energy_efficiency_certification', models.BooleanField(default=False)),
                ('has_emergency_power_supply', models.BooleanField(default=False)),
                ('has_fire_alarm_system', models.BooleanField(default=False)),
                ('has_access_control', models.BooleanField(default=False)),
                ('has_video_surveillance', models.BooleanField(default=False)),
                ('has_24_hour_security', models.BooleanField(default=False)),
                ('has_on_site_management', models.BooleanField(default=False)),
                ('has_maintenance_services', models.BooleanField(default=False)),
                ('has_cleaning_services', models.BooleanField(default=False)),
                ('has_landscaping_services', models.BooleanField(default=False)),
                ('has_waste_management_services', models.BooleanField(default=False)),
                ('has_parking_management_services', models.BooleanField(default=False)),
                ('has_security_patrols', models.BooleanField(default=False)),
                ('has_access_control_system', models.BooleanField(default=False)),
                ('has_emergency_exits', models.BooleanField(default=False)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='office', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Resort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_villas', models.IntegerField()),
                ('has_spa', models.BooleanField(default=False)),
                ('has_gym', models.BooleanField(default=False)),
                ('has_beach_access', models.BooleanField(default=False)),
                ('has_water_sports', models.BooleanField(default=False)),
                ('has_restaurant', models.BooleanField(default=False)),
                ('has_conference_facility', models.BooleanField(default=False)),
                ('has_swimming_pool', models.BooleanField(default=False)),
                ('has_parking_space', models.BooleanField(default=False)),
                ('has_security', models.BooleanField(default=False)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_air_conditioning', models.BooleanField(default=False)),
                ('has_heating', models.BooleanField(default=False)),
                ('has_laundry_service', models.BooleanField(default=False)),
                ('has_room_service', models.BooleanField(default=False)),
                ('has_golf_course', models.BooleanField(default=False)),
                ('has_tennis_court', models.BooleanField(default=False)),
                ('has_basketball_court', models.BooleanField(default=False)),
                ('has_beach_bar', models.BooleanField(default=False)),
                ('has_kids_club', models.BooleanField(default=False)),
                ('has_casino', models.BooleanField(default=False)),
                ('has_night_club', models.BooleanField(default=False)),
                ('has_shuttle_service', models.BooleanField(default=False)),
                ('has_airport_transfer', models.BooleanField(default=False)),
                ('has_pet_friendly', models.BooleanField(default=False)),
                ('has_smoking_area', models.BooleanField(default=False)),
                ('has_wheelchair_accessible', models.BooleanField(default=False)),
                ('has_bicycle_rental', models.BooleanField(default=False)),
                ('has_car_rental', models.BooleanField(default=False)),
                ('has_boat_rental', models.BooleanField(default=False)),
                ('has_yacht_rental', models.BooleanField(default=False)),
                ('has_diving_center', models.BooleanField(default=False)),
                ('has_snorkeling_center', models.BooleanField(default=False)),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resort', to='properties.property')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seating_capacity', models.IntegerField()),
                ('kitchen_size', models.CharField(max_length=100)),
                ('liquor_license', models.BooleanField(default=False)),
                ('has_outdoor_seating', models.BooleanField(default=False)),
                ('has_parking_space', models.BooleanField(default=False)),
                ('has_wifi', models.BooleanField(default=False)),
                ('has_air_conditioning', models.BooleanField(default=False)),
                ('has_heating', models.BooleanField(default=False)),
                ('has_security', models.BooleanField(default=False)),
                ('has_fire_safety', models.BooleanField(default=False)),
                ('has_accessibility_features', models.BooleanField(default=False)),
                ('has_kitchen_equipment', models.TextField()),
                ('has_restaurant_licenses', models.TextField()),
                ('has_restaurant_software', models.TextField()),
                ('has_restaurant_furniture', models.TextField()),
                ('has_restaurant_decor', models.TextField()),
                ('has_restaurant_signage', models.TextField()),
                ('has_restaurant_menu', models.TextField()),
                ('has_restaurant_suppliers', models.TextField()),
                ('has_restaurant_staff', models.TextField()),
                ('has_restaurant_marketing', models.TextField()),
                ('has_restaurant_website', models.TextField()),
                ('has_restaurant_social_media', models.TextField()),
                ('has_restaurant_loyalty_program', models.TextField()),
                ('has_restaurant_delivery', models.TextField()),
                ('has_restaurant_takeout', models.TextField()),
                ('has_restaurant_catering', models.TextField()),
                ('has_restaurant_events', models.TextField()),
                ('has_restaurant_reservations', models.TextField()),
                ('has_restaurant_payment_processing', models.TextField()),
                ('has_restaurant_inventory_management', models.TextField()),
                ('has_restaurant_customer_relationship_management', models.TextField()),
                ('property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to='properties.property')),
            ],
        ),
    ]
